{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/sdaconceicao/cookbookery/1.0.0"
    }
  ],
  "info": {
    "description": "API for Cookbookery App",
    "version": "1.0.0",
    "title": "Cookbookery API",
    "contact": {
      "email": "stephen@stephenandrewdesigns.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "recipes"
    },
    {
      "name": "tags"
    }
  ],
  "paths": {
    "/recipes/": {
      "get": {
        "tags": [
          "recipes"
        ],
        "summary": "searches recipes",
        "description": "Search recipes with filters\n",
        "parameters": [
          {
            "in": "query",
            "name": "searchString",
            "description": "Optional search string for looking up recipe",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "number of records to skip for pagination",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "maximum number of records to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipe"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": [
          "recipes"
        ],
        "summary": "adds an recipe",
        "description": "Adds an recipe",
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Recipe"
              }
            }
          },
          "description": "Recipe to add"
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "recipe ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "recipes"
        ],
        "summary": "retrieve an recipe",
        "description": "Retrieve an recipe",
        "responses": {
          "200": {
            "description": "recipe by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "recipe ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "recipes"
        ],
        "summary": "updates an recipe",
        "description": "Updates an recipe",
        "responses": {
          "200": {
            "description": "item updated"
          },
          "400": {
            "description": "invalid input, object invalid"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Recipe"
              }
            }
          },
          "description": "Recipe to update"
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "recipe ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "recipes"
        ],
        "summary": "removes an recipe",
        "description": "Removes an recipe",
        "responses": {
          "200": {
            "description": "item removed"
          },
          "400": {
            "description": "invalid input, object invalid"
          }
        }
      }
    },
    "/tags/": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "searches tags",
        "description": "Search tags\n",
        "parameters": [
          {
            "in": "query",
            "name": "searchString",
            "description": "pass an optional search string for looking up tag",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "number of records to skip for pagination",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "maximum number of records to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Recipe": {
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "servingSize",
          "prepTime",
          "cookTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": 3331
          },
          "title": {
            "type": "string",
            "description": "Recipe title",
            "example": "Spaghetti"
          },
          "description": {
            "type": "string",
            "description": "Recipe description",
            "example": "A tasty italian treat"
          },
          "image": {
            "type": "string",
            "description": "Image for recipe"
          },
          "servingSize": {
            "type": "number",
            "description": "Number of people the recipe can serve",
            "example": 4
          },
          "prepTime": {
            "type": "number",
            "description": "Time in minutes to prep meal",
            "example": 30
          },
          "cookTime": {
            "type": "number",
            "description": "Time in minutes to cook meal",
            "example": 60
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            }
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Step"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        }
      },
      "Tag": {
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "spicy"
          }
        }
      },
      "Step": {
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Boil pasta for 5 minutes"
          }
        },
        "type": "object"
      },
      "Ingredient": {
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Pasta"
          }
        },
        "type": "object"
      }
    }
  }
}